/*! cachejs - v0.1.0 - 2012-10-12 */
(function(e,t){"use strict";typeof define=="function"&&define.amd?define(["backbone","jquery","underscore","jquery.store"],t):e.Backbone.Cache=t(e.Backbone,e.jQuery,e._)})(this,function(e,t,n){"use strict";var r={cache:new e.Model,store:new t.store,scrambled:!1,encoder:null,setEncoder:function(e){n.isObject(e)&&(this.encoder=e)},setScramble:function(e){n.isBoolean(e)&&(this.isScrambled=e)},scramble:function(e){if(!this.encoder||this.encoder&&!n.isFunction(this.encoder.encode))throw new Error("Cache Encoder Not Set");return this.encoder.encode(e)},unscramble:function(e){if(!this.encoder||this.encoder&&!n.isFunction(this.encoder.decode))throw new Error("Cache Decoder Not Set");return this.encoder.decode(e)},get:function(e,t){var n=this.cache.get(e);if(!n||t){if(this.scrambled){var r=this.scramble(e);n=this.unscramble(this.store.get(r));try{n=JSON.parse(n)}catch(i){n=null,this.store.del(r),this.cache.unset(e,{silent:!0})}}else n=this.store.get(e);this.cache.set(e,n,{silent:!0})}return n},set:function(e,t){return this.isScrambled?this.store.set(this.scramble(e),this.scramble(JSON.stringify(t))):this.store.set(e,t),this.cache.set(e,t),t},unset:function(e){this.cache.unset(e),this.store.del(this.isScrambled?this.scramble(e):e)},del:function(e){this.unset(e)},flush:function(){this.cache.clear(),this.store.flush()}};return function(){r.store.driver.scope="browser",r.store.encoders=["xml","json"],r.store.decoders=["json","xml"]}(),r});